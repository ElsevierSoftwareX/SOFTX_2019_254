delimiters "$", "$"
InstanceManagerFunctions(a) ::= <<

int $a.Name$_instance_manager_receive()
{
	int totalNewMembranes = 0;
	int newMembranes = 0;
	int instance_id;
	init_int_array(&NEW_INSTANCES);
	msgRequestId_message = get_first_msgRequestId_message();
	while(msgRequestId_message)
	{
		instance_id = msgRequestId_message->instance_id;
		newMembranes = msgRequestId_message->newMembranes;
		add_int(&NEW_INSTANCES, instance_id);
		add_int(&NEW_INSTANCES, newMembranes);
		//printf("\n instance manager receive newMembranes - %d %d \n", instance_id, newMembranes);
		totalNewMembranes += newMembranes;
		msgRequestId_message = get_next_msgRequestId_message(msgRequestId_message);
	}
	IS_NEW_INSTANCES = totalNewMembranes == 0?0:1;
	return 0; /* Returning zero means the agent is not removed */
}

int $a.Name$_instance_manager_send()
{
	int totalNewMembranes = 0;
	int newMembranes = 0;
	int instance_id;
	//printf("\n instance manager - %d \n", NEW_INSTANCES.size);
	while(NEW_INSTANCES.size > 0)
	{
		instance_id = NEW_INSTANCES.array[0];
		newMembranes = NEW_INSTANCES.array[1];
		remove_int(&NEW_INSTANCES, 0);
		remove_int(&NEW_INSTANCES, 0);
		//printf("\n instance manager - %d \n", NEW_INSTANCES.size);
		//printf("\n instance manager newMembranes - %d \n", newMembranes);
		add_msgReceiveId_message($a.TypeId$, instance_id, INSTANCE_NUMBER);
		INSTANCE_NUMBER += newMembranes;
	}
	IS_NEW_INSTANCES = 0;
	return 0; /* Returning zero means the agent is not removed */
}


>>